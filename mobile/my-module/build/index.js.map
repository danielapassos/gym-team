{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,YAAY,EAAgB,MAAM,mBAAmB,CAAC;AAEnF,2EAA2E;AAC3E,yCAAyC;AACzC,OAAO,QAAQ,MAAM,YAAY,CAAC;AAClC,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAG1C,iCAAiC;AACjC,MAAM,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;AAE9B,MAAM,UAAU,KAAK;IACnB,OAAO,QAAQ,CAAC,KAAK,EAAE,CAAC;AAC1B,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,KAAa;IAC/C,OAAO,MAAM,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC7C,CAAC;AAED,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,QAAQ,IAAI,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AAE1E,MAAM,UAAU,iBAAiB,CAAC,QAA6C;IAC7E,OAAO,OAAO,CAAC,WAAW,CAAqB,UAAU,EAAE,QAAQ,CAAC,CAAC;AACvE,CAAC;AAED,OAAO,EAAE,YAAY,EAAyC,CAAC","sourcesContent":["import { NativeModulesProxy, EventEmitter, Subscription } from 'expo-modules-core';\n\n// Import the native module. On web, it will be resolved to MyModule.web.ts\n// and on native platforms to MyModule.ts\nimport MyModule from './MyModule';\nimport MyModuleView from './MyModuleView';\nimport { ChangeEventPayload, MyModuleViewProps } from './MyModule.types';\n\n// Get the native constant value.\nexport const PI = MyModule.PI;\n\nexport function hello(): string {\n  return MyModule.hello();\n}\n\nexport async function setValueAsync(value: string) {\n  return await MyModule.setValueAsync(value);\n}\n\nconst emitter = new EventEmitter(MyModule ?? NativeModulesProxy.MyModule);\n\nexport function addChangeListener(listener: (event: ChangeEventPayload) => void): Subscription {\n  return emitter.addListener<ChangeEventPayload>('onChange', listener);\n}\n\nexport { MyModuleView, MyModuleViewProps, ChangeEventPayload };\n"]}